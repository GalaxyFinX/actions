name: Test

on:
  pull_request:
    branches:
      - "main"

permissions:
  contents: read

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/test

jobs:
  # TODO: add build-and-push test
  # build-and-push:
  # ...
  docker-build-without-push:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          # list of Docker images to use as base name for tags
          images: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          # generate Docker tags based on the following events/attributes
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
          flavor: |
            latest=false

      - name: Build and push image
        uses: ./docker-build
        with:
          context: "."
          dockerfile: ./docker-build/Dockerfile.test
          push: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  kaniko-build-without-push:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          # list of Docker images to use as base name for tags
          images: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          # generate Docker tags based on the following events/attributes
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
          flavor: |
            latest=false

      - name: Build and push image
        uses: ./kaniko-build
        with:
          context: "."
          dockerfile: ./docker-build/Dockerfile.test
          no-push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # test: true

  get-changed-dirs:
    name: Get all changed directories
    runs-on: ubuntu-22.04
    outputs:
      matrix: ${{ steps.get-changed-dirs.outputs.matrix }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get all changed dirs
        id: get-changed-dirs
        uses: ./get-changed-dirs
        with:
          paths: |
            **/*.yaml
          paths_ignore: |
            .README.md

  echo-changed-dirs:
    name: Echo changed dirs
    needs: get-changed-dirs
    runs-on: ubuntu-22.04
    if: needs.get-changed-dirs.outputs.matrix.dirs != '[]'
    strategy:
      matrix: ${{ fromJSON(needs.get-changed-dirs.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v3

      - name: Echo changed dirs
        run: |
          CURRENT_DIR=${{ matrix.dirs }}

          echo $CURRENT_DIR
        shell: bash
